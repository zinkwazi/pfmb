#!/bin/bash
# by Greg Lawler greg@outsideopen.com
#
# To Do List:
# Encrypt the stored backups.
# Accept single hostname or IP from the command line and bypass hosts file.
# Give useful feedback on errors relating to SSH / connectivity.
# Allow different SSH keys for each IP.

if [[ -r "/etc/default/pfmb" ]] ; then
  source /etc/default/pfmb
fi

##### Defaults when there are no defaults
: ${config:=/etc/pfmb/hosts.conf}
: ${backupuser:=backup}
: ${backupdir:=/var/backups/pfmb}
: ${backupcopies:=25}

##### Other settings - don't change these willy-nilly unless you know what you're doing! #####
datestamp=$(date '+%Y-%m-%d-%s')

# Path on pfSense to the XML configuration file.
: ${xmlpath:=/cf/conf/config.xml}

function isint() {
  re='^[0-9]+$'
  if ! [[ $1 =~ $re ]] ; then
    echo "Error: $1 is not a valid port number.  Check your $config syntax..." >&2; exit 1
  fi
}

function rotateBackups() {
  OLDIFS=$IFS
  IFS=$'\n'
  files=$(find "$backupdir/$name" -name "$name-$host-*.xml" | sort | tail -n $backupcopies)
  find "$backupdir/$name" -name "$name-$host-*.xml" | while read i; do
    keep=0
    for a in ${files[@]}; do
      if [ "$i" == "$a" ]; then
        keep=1;
      fi
    done
    if [ $keep == 0 ]; then
      rm "$i"
    fi
  done
  IFS=$OLDIFS
}

function main() {
  while IFS=':' read -r host port desc; do
    if [ -n "$port" ] ; then
      isint $port
    else
      port=22
    fi

    # setup vars for use
    name="$host"
    if [[ ! -z "$desc" ]] ; then
        name="$desc"
    fi
    backup_file="$backupdir/$name/$name-$host-$datestamp.xml"

    # create dir if doesn't exist
    if ! [[ -d "$backupdir/$name" && ! -L "$backupdir/$name" ]] ; then
	mkdir -p $backupdir/$name
    fi

    #run the backups
    scp -q -P $port $backupuser@$host:$xmlpath "${backup_file}"
    if [ $? -eq 0 ] && [ -s "${backup_file}" ]; then
      echo "Backing up $name... OK"
      rotateBackups
    else
      echo "Backing up $name... FAILED"
      /etc/pfmb/pushover.sh -t "pfSense Back-up Error" "$name pfsense config backup has failed."
    fi
  done < $config
}
main
